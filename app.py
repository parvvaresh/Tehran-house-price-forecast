import pandas as pd
from utils import load_model_and_predict

from flask import Flask, render_template, request, redirect, url_for, jsonify

app = Flask(__name__)

def currency_format(value):
    return "{:,.0f}".format(value).replace(",", ",")

app.jinja_env.filters['currency_format'] = currency_format

# لیست کامل آدرس‌ها (مطابق با لیست اولیه)
ALL_ADDRESSES = [
    "درکه",
    "زعفرانیه",
    "جابری",
    "دهکده المپیک",
    "حکیمیه",
    "شهرک غرب",
    "سعادت‌آباد",
    "خاوران",
    "سازمان آب",
    "مرزداران",
    "دارآباد",
    "شاهین",
    "شهر زیبا",
    "سازمان برنامه",
    "باغ فیض",
    "جنت‌آباد مرکزی",
    "پونک",
    "نیاوران",
    "جیحون",
    "سیدخندان",
    "سهروردی",
    "ازگل",
    "چیتگر",
    "دروس",
    "هروی",
    "جمهوری",
    "الهیه",
    "تهرانپارس غربی",
    "دریاچه شهدای خلیج فارس",
    "نیلوفر",
    "میرداماد",
    "قیطریه",
    "فرمانیه",
    "سوهانک",
    "کوی فردوس",
    "جنت‌آباد جنوبی",
    "تهران‌سر",
    "استاد معین",
    "اختیاریه",
    "طیب",
    "ستارخان",
    "نارمک",
    "کاظم‌آباد",
    "شهرک ولیعصر",
    "دریا",
    "شهران جنوبی",
    "ونک",
    "حصار بوعلی",
    "شهرک پرواز",
    "بهار",
    "المهدی",
    "اباذر",
    "شکوفه",
    "شمس‌آباد",
    "کوی فراز",
    "شهرک نفت (منطقه ۵)",
    "اندیشه (شهر زیبا)",
    "سرو آزاد",
    "جردن",
    "آذربایجان",
    "بلوار کشاورز",
    "گیشا (کوی نصر)",
    "میدان حر",
    "شهران شمالی",
    "کوی مهران",
    "وردآورد",
    "ولنجک",
    "عبدل‌آباد",
    "یوسف‌آباد",
    "امیرآباد",
    "محمودیه",
    "گرگان",
    "جی",
    "نواب",
    "شهرآرا",
    "پاسداران",
    "خلیج فارس",
    "ظفر",
    "شادمهر",
    "نارمک جنوبی",
    "اقدسیه",
    "هوانیروز",
    "طرشت",
    "شهرک راه‌آهن",
    "منصوریه (پل سیمان)",
    "توحید",
    "امامزاده قاسم",
    "دیلمان",
    "افسریه",
    "گلاب دره",
    "جلفا",
    "کرمان",
    "تهران‌ویلا",
    "عباس‌آباد",
    "دزاشیب",
    "جنت‌آباد شمالی",
    "شارق شرقی",
    "سلسبیل",
    "هاشم‌آباد",
    "ابوذر (منطقه ۱۵)",
    "شهرک فردوس",
    "شهرک محلاتی",
    "سلیمانی",
    "مبارک‌آباد بهشتی",
    "سبلان",
    "کوهک",
    "تاکسیرانی",
    "قبا",
    "پیروزی",
    "تجریش",
    "میدان ولیعصر",
    "صد دستگاه",
    "آرارات",
    "سنگلج",
    "پلیس",
    "صادقیه",
    "توانیر",
    "تهرانپارس شرقی",
    "دولتخواه",
    "اراج",
    "آبشار",
    "شهرک دریا",
    "شادآباد",
    "فلاح",
    "زمزم",
    "گمرک",
    "دروازه شمیران",
    "آهنگ",
    "کامرانیه",
    "امیر بهادر",
    "چیذر",
    "مینا",
    "هاشمی",
    "دکتر هوشیار",
    "دانشگاه شریف",
    "صاحب الزمان",
    "کوی بیمه",
    "شریف‌آباد",
    "گلچین",
    "سپهر",
    "تهران‌نو",
    "مدائن",
    "جوادیه",
    "خانی‌آباد",
    "پرستار",
    "اتابک",
    "مولوی",
    "حسین‌آباد",
    "حکمت",
    "نصرت",
    "بریانک",
    "امام سجاد(ع)",
    "کوی هفدهم شهریور",
    "یافت‌آباد",
    "تولید دارو",
    "کوثر",
    "دولت‌آباد",
    "مسعودیه",
    "باغ فردوس",
    "نازی‌آباد",
    "شهرک نفت (منطقه ۱)",
    "شریف",
    "دربند",
    "سرآسیاب مهرآباد",
    "ارم",
    "ایران",
    "زهتابی",
    "شوش",
    "هفت چنار",
    "جمال‌زاده",
    "منیریه",
    "امیریه",
    "باغ خزانه",
    "نیرو هوایی",
    "شهید دستغیب",
    "شهرک ژاندارمری",
    "آشتیانی",
    "آجودانیه",
    "دانشگاه علم و صنعت",
    "دریان‌نو",
    "زنجان",
    "خزانه",
    "مقدم",
    "خواجه نظام الملک",
    "شیخ هادی",
    "خاقانی",
    "فاطمی",
    "شبیری",
    "قلهک",
    "هفت حوض",
    "شهرک پاسداران",
    "فدک",
    "چهارصد دستگاه",
    "امانیه",
    "امامت",
    "شهرک آزادی",
    "پاتریس لومومبا",
    "مهرآباد جنوبی",
    "مخصوص",
    "وحیدیه",
    "زرگنده",
    "دبستان",
    "مشیریه",
    "آذری",
    "شاهد",
    "جلیلی",
    "لویزان",
    "شهرک امام خمینی",
    "صفا",
    "شیوا",
    "شهرک شهید باقری",
    "شیان",
    "کاشانک",
    "آبشار تهران",
    "مجیدیه",
    "سرخه حصار",
    "دانشگاه تهران",
    "خواجه نصیر طوسی",
    "سرتخت",
    "کن",
    "حشمتیه",
    "درب دوم",
    "شهرک کوهسار",
    "استخر",
    "یاخچی‌آباد",
    "دردشت",
    "سنایی",
    "اکباتان",
    "نبی اکرم(ص)",
    "اوقاف",
    "قاسم‌آباد",
    "امامزاده حسن(ع)",
    "بهاران",
    "کاروان",
    "اسکندری",
    "قزل قلعه",
    "دولاب",
    "بلورسازی",
    "ایوانک",
    "ائمه اطهار",
    "بهجت‌آباد",
    "ایرانشهر",
    "مجیدآباد",
    "شهرک سینمایی",
    "اوین",
    "قیام",
    "طوس",
    "جهاد",
    "شهرک شریعتی",
    "حسن‌آباد",
    "شهرک صدرا",
    "عارف",
    "جماران",
    "ارامنه",
    "نظام‌آباد",
    "تسلیحات",
    "وصفنارد",
    "آسمان",
    "شهرک والفجر (منطقه ۶)",
    "فردوسی",
    "ابراهیم‌آباد",
    "دلگشا",
    "بازار",
    "ظهیرآباد",
    "علی‌آباد",
    "ابن بابویه",
    "حمزه‌آباد",
    "قنات‌کوثر",
    "بهمن یار",
    "میدان انقلاب",
    "مینابی",
    "بهارستان",
    "قیام‌دشت",
    "خاک سفید",
    "شهرک امید",
    "فرحزاد",
    "جوادیه تهرانپارس",
    "بهداشت",
    "شمشیری",
    "شهرک کیانشهر",
    "سیزده آبان",
    "ده‌ونک",
    "صفائیه (چشمه علی)",
    "خانی‌آباد نو",
    "کوی نوبنیاد",
    "فیروزآبادی",
    "حافظیه",
    "شهرک دانشگاه تهران",
    "شهید آوینی",
    "شهرک آسمان",
    "دهقان",
    "سلامت",
    "آرژانتین",
    "شهید بروجردی",
    "شهادت",
    "بیسیم",
    "شهرک تختی",
    "زرکش",
    "پامنار",
    "حصارک",
    "امام حسین(ع)",
    "لشکر",
    "شیرازی",
    "شاندیز",
    "سعیدآباد",
    "امین حضور",
    "سیروس",
    "جوانمرد قصاب",
    "هزارسنگ",
    "مرادآباد",
    "شمیران‌نو",
    "گاندی",
    "شهرک آپادانا",
    "شهرک طالقانی",
    "شهید رجایی",
    "زاهد گیلانی",
    "شهرک گلها",
    "اتحاد",
    "اسفندیاری",
    "زیبادشت",
    "نجات اللهی",
    "سرآسیاب دولاب",
    "حسن‌آباد باقرفر",
    "قلمستان",
    "باغ آذری",
    "ملک‌آباد",
    "شهرک مسلمین",
    "نعمت‌آباد",
    "کریم‌آباد",
    "صالح‌آباد شرقی",
    "شهرک ابوذر",
    "مسگرآباد",
    "شهید اسدی",
    "شهرک غزالی",
    "فتح",
    "شهرک فرهنگیان",
    # "شهرک شریفی"
]

ALL_ADDRESSES = list(set(ALL_ADDRESSES))
print(len(ALL_ADDRESSES))

@app.route('/')
def home():
    return render_template('index.html')
@app.route('/predict', methods=['POST'])
def predict():
    try:
        # دریافت داده‌های فرم
        data = {
            'address': request.form.get('address'),
            'area': float(request.form.get('area')),
            'year': int(request.form.get('year')),
            'rooms': int(request.form.get('rooms')),
            'features': request.form.getlist('features')
        }

        # اعتبارسنجی ورودی‌ها
        if not data['address'] or data['address'] not in ALL_ADDRESSES:
            raise ValueError("آدرس انتخاب شده معتبر نیست")

        if not (20 <= data['area'] <= 500):
            raise ValueError("متراژ باید بین ۲۰ تا ۵۰۰ متر باشد")

        if not (1320 <= data['year'] <= 1403):
            raise ValueError("سال ساخت باید بین ۱۳۲۰ تا ۱۴۰۳ باشد")

        # پردازش داده‌ها
        address_dict = {f'Address_{addr}': 0 for addr in ALL_ADDRESSES}
        address_dict[f'Address_{data["address"]}'] = 1

        current_year = 1403
        building_age = min(current_year - data['year'], 30)

        amenities_sum = sum([
            1 if 'انبار' in data['features'] else 0,
            1 if 'پارکینگ' in data['features'] else 0,
            1 if 'آسانسور' in data['features'] else 0
        ])

        # ایجاد DataFrame
        df = pd.DataFrame([{
            'Area': data['area'],
            'Building_Age': building_age,
            'Rooms': data['rooms'],
            'Amenities_Sum': amenities_sum,
            **address_dict
        }])

        # پیش‌بینی قیمت
        prediction = load_model_and_predict(df)
        
        return redirect(url_for('show_result', prediction=prediction))

    except Exception as e:
        return render_template('error.html', error_message=str(e))




@app.route('/result')
def show_result():
    prediction = request.args.get('prediction', '')
    try:
        return render_template('result.html', prediction=float(prediction))
    except:
        return render_template('error.html', error_message="مشکل در نمایش نتایج")


if __name__ == '__main__':
    app.run(debug=True)